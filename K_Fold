{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b021713f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:10.664434Z",
     "iopub.status.busy": "2024-07-08T07:48:10.663706Z",
     "iopub.status.idle": "2024-07-08T07:48:28.507697Z",
     "shell.execute_reply": "2024-07-08T07:48:28.506569Z"
    },
    "papermill": {
     "duration": 17.855706,
     "end_time": "2024-07-08T07:48:28.510056",
     "exception": false,
     "start_time": "2024-07-08T07:48:10.654350",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting ultralytics\r\n",
      "  Downloading ultralytics-8.2.50-py3-none-any.whl.metadata (41 kB)\r\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.2/41.2 kB\u001b[0m \u001b[31m649.9 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hRequirement already satisfied: numpy<2.0.0,>=1.23.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (1.26.4)\r\n",
      "Requirement already satisfied: matplotlib>=3.3.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (3.7.5)\r\n",
      "Requirement already satisfied: opencv-python>=4.6.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (4.10.0.82)\r\n",
      "Requirement already satisfied: pillow>=7.1.2 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (9.5.0)\r\n",
      "Requirement already satisfied: pyyaml>=5.3.1 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (6.0.1)\r\n",
      "Requirement already satisfied: requests>=2.23.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (2.32.3)\r\n",
      "Requirement already satisfied: scipy>=1.4.1 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (1.11.4)\r\n",
      "Requirement already satisfied: torch>=1.8.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (2.1.2)\r\n",
      "Requirement already satisfied: torchvision>=0.9.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (0.16.2)\r\n",
      "Requirement already satisfied: tqdm>=4.64.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (4.66.4)\r\n",
      "Requirement already satisfied: psutil in /opt/conda/lib/python3.10/site-packages (from ultralytics) (5.9.3)\r\n",
      "Requirement already satisfied: py-cpuinfo in /opt/conda/lib/python3.10/site-packages (from ultralytics) (9.0.0)\r\n",
      "Requirement already satisfied: pandas>=1.1.4 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (2.2.1)\r\n",
      "Requirement already satisfied: seaborn>=0.11.0 in /opt/conda/lib/python3.10/site-packages (from ultralytics) (0.12.2)\r\n",
      "Collecting ultralytics-thop>=2.0.0 (from ultralytics)\r\n",
      "  Downloading ultralytics_thop-2.0.0-py3-none-any.whl.metadata (8.5 kB)\r\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (1.2.0)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (4.47.0)\r\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (1.4.5)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (21.3)\r\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (3.1.1)\r\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\r\n",
      "Requirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.1.4->ultralytics) (2023.3.post1)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.1.4->ultralytics) (2023.4)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (3.3.2)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (3.6)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (1.26.18)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.23.0->ultralytics) (2024.2.2)\r\n",
      "Requirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (3.13.1)\r\n",
      "Requirement already satisfied: typing-extensions in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (4.9.0)\r\n",
      "Requirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (1.12.1)\r\n",
      "Requirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (3.2.1)\r\n",
      "Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (3.1.2)\r\n",
      "Requirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->ultralytics) (2024.3.1)\r\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.16.0)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch>=1.8.0->ultralytics) (2.1.3)\r\n",
      "Requirement already satisfied: mpmath<1.4.0,>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from sympy->torch>=1.8.0->ultralytics) (1.3.0)\r\n",
      "Downloading ultralytics-8.2.50-py3-none-any.whl (799 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m799.4/799.4 kB\u001b[0m \u001b[31m6.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading ultralytics_thop-2.0.0-py3-none-any.whl (25 kB)\r\n",
      "Installing collected packages: ultralytics-thop, ultralytics\r\n",
      "Successfully installed ultralytics-8.2.50 ultralytics-thop-2.0.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install ultralytics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ca12de92",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:28.534580Z",
     "iopub.status.busy": "2024-07-08T07:48:28.534029Z",
     "iopub.status.idle": "2024-07-08T07:48:37.547713Z",
     "shell.execute_reply": "2024-07-08T07:48:37.546829Z"
    },
    "papermill": {
     "duration": 9.028293,
     "end_time": "2024-07-08T07:48:37.550283",
     "exception": false,
     "start_time": "2024-07-08T07:48:28.521990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from ultralytics import YOLO\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95e81527",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T23:27:07.219497Z",
     "iopub.status.busy": "2024-06-29T23:27:07.219068Z",
     "iopub.status.idle": "2024-06-29T23:27:07.223985Z",
     "shell.execute_reply": "2024-06-29T23:27:07.222988Z",
     "shell.execute_reply.started": "2024-06-29T23:27:07.219465Z"
    },
    "papermill": {
     "duration": 0.009344,
     "end_time": "2024-07-08T07:48:37.569366",
     "exception": false,
     "start_time": "2024-07-08T07:48:37.560022",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Configuración de la ruta de los datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "17fedded",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:37.591377Z",
     "iopub.status.busy": "2024-07-08T07:48:37.590870Z",
     "iopub.status.idle": "2024-07-08T07:48:37.596098Z",
     "shell.execute_reply": "2024-07-08T07:48:37.594898Z"
    },
    "papermill": {
     "duration": 0.021452,
     "end_time": "2024-07-08T07:48:37.600023",
     "exception": false,
     "start_time": "2024-07-08T07:48:37.578571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "path_images = '/kaggle/input/to-train-crosswalks/to_train/images'\n",
    "path_labels = '/kaggle/input/to-train-crosswalks/to_train/labels'\n",
    "path_test_images = '/kaggle/input/test-crosswalk/test/images'\n",
    "path_test_labels = '/kaggle/input/test-crosswalk/test/labels'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "50edd741",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:37.623524Z",
     "iopub.status.busy": "2024-07-08T07:48:37.622997Z",
     "iopub.status.idle": "2024-07-08T07:48:41.220084Z",
     "shell.execute_reply": "2024-07-08T07:48:41.218499Z"
    },
    "papermill": {
     "duration": 3.612343,
     "end_time": "2024-07-08T07:48:41.222261",
     "exception": false,
     "start_time": "2024-07-08T07:48:37.609918",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Se ha creado un archivo de etiqueta vacío para Strisce--105-_jpg.rf.16ab0e51e3a52d6520b0c449d2a8b56b(1).jpg\n",
      "Se ha creado un archivo de etiqueta vacío para Strisce--105-_jpg.rf.e2fce3b37caa1e8452748ffbadde64df(1).jpg\n",
      "Se ha creado un archivo de etiqueta vacío para Strisce--113-_jpg.rf.1fcdddf1cf3d22ab22bf5b31bdd62a1e(1).jpg\n",
      "Se ha creado un archivo de etiqueta vacío para Strisce--118-_jpg.rf.54995eb9bae14606e4cddbc834e8ce37(1).jpg\n",
      "Se ha creado un archivo de etiqueta vacío para Strisce--107-_jpg.rf.17c8ef02eb84b49a728055218dceaa40(1).jpg\n",
      "Datos de entrenamiento:\n",
      "                                                  image  \\\n",
      "0     Strisce--140-_jpg.rf.86b57352fd2545f88a9c7d0df...   \n",
      "1     Strisce--129-_jpg.rf.f1e7a3e79bcee39763e9c18a8...   \n",
      "2     Strisce--109-_jpg.rf.35da873c2eeb6715c4d385cde...   \n",
      "3     Strisce--345-_jpg.rf.328518dd4dd55a900d1dac183...   \n",
      "4     Strisce--1-_jpg.rf.b3959ddb964e8243a89487bddc7...   \n",
      "...                                                 ...   \n",
      "1289  Strisce--486-_jpg.rf.bd3e3f782f6913de766d60710...   \n",
      "1290  Strisce--322-_jpg.rf.3e17720ebb71b10c9460bb6f8...   \n",
      "1291  Strisce--355-_jpg.rf.459dc27a619f49e7f0f0ae8e6...   \n",
      "1292  Strisce--308-_jpg.rf.a3e7da8bac8305edb9976d533...   \n",
      "1293  Strisce--135-_jpg.rf.40613cbe563fd8608210b851d...   \n",
      "\n",
      "                                                  label  \n",
      "0     Strisce--148-_jpg.rf.9df8e6c53b9ce5489e715e08c...  \n",
      "1     Strisce--240-_jpg.rf.7fe7de74e9433bf260f4d8885...  \n",
      "2     Strisce--388-_jpg.rf.a8a6cd9c8375b77794b45ed7a...  \n",
      "3     Strisce--93-_jpg.rf.c0f23f6044ad5d19e34fc2edac...  \n",
      "4     Strisce--82-_jpg.rf.396f42e56c81ec9c0cdc0523ac...  \n",
      "...                                                 ...  \n",
      "1289  Strisce--199-_jpg.rf.6264ff9f2c73b58c6dfb8fb02...  \n",
      "1290  Strisce--43-_jpg.rf.a814ae4c8fc012230a1ab73343...  \n",
      "1291  Strisce--323-_jpg.rf.de4baf0340177b70fd57157bc...  \n",
      "1292  Strisce--98-_jpg.rf.c8db82d211e0c31eb1c9b5c0fb...  \n",
      "1293  Strisce--184-_jpg.rf.367282a9d12afc5836786c907...  \n",
      "\n",
      "[1294 rows x 2 columns]\n",
      "\n",
      "Datos de prueba:\n",
      "                                                 image  \\\n",
      "0    Strisce--495-_jpg.rf.50856c38477352199e7490b8f...   \n",
      "1    Strisce--405-_jpg.rf.1fcae596eba78426428b006ee...   \n",
      "2    Strisce--6-_jpg.rf.2ef258519c793bfa685db128e50...   \n",
      "3    Strisce--105-_jpg.rf.16ab0e51e3a52d6520b0c449d...   \n",
      "4    Strisce--307-_jpg.rf.f7a359045d1d078e98b685170...   \n",
      "..                                                 ...   \n",
      "224  Strisce--111-_jpg.rf.94c80e745710232f2b98f9ccb...   \n",
      "225  Strisce--374-_jpg.rf.413efbcd72a8317079143f607...   \n",
      "226  Strisce--414-_jpg.rf.0c32e215524dc46212f23e540...   \n",
      "227  Strisce--318-_jpg.rf.63f634be5ecf75e6dfb02321b...   \n",
      "228  Strisce--275-_jpg.rf.8ed221bfd48d38e70b96363de...   \n",
      "\n",
      "                                                 label  \n",
      "0    Strisce--492-_jpg.rf.0932a58361aff023845f8aee6...  \n",
      "1    Strisce--43-_jpg.rf.d3e15fa4b938798e44d1bd5edf...  \n",
      "2    Strisce--476-_jpg.rf.fd9310dcdc5e948213dab4e61...  \n",
      "3    Strisce--83-_jpg.rf.7f4f352815e35e524bf85f068c...  \n",
      "4    Strisce--456-_jpg.rf.dbf2d101a0557f41f1a18ce3d...  \n",
      "..                                                 ...  \n",
      "224  Strisce--177-_jpg.rf.64c6a4883a86ac59b2a0ae5fc...  \n",
      "225  Strisce--379-_jpg.rf.abf9d6cb9dfb44d147c4b998b...  \n",
      "226  Strisce--466-_jpg.rf.61a04e01571562119bd17d2be...  \n",
      "227  Strisce--54-_jpg.rf.b4df249608aa1661a020f96272...  \n",
      "228  Strisce--194-_jpg.rf.d4388398ecb47e033a379dc09...  \n",
      "\n",
      "[229 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import shutil\n",
    "import pandas as pd\n",
    "\n",
    "path_working_test='/kaggle/working/test_folder'\n",
    "\n",
    "path_working_test_images = f'{path_working_test}/test_images'\n",
    "path_working_test_labels = f'{path_working_test}/test_labels'\n",
    "\n",
    "# Crear directorios de trabajo para las imágenes y etiquetas de prueba\n",
    "os.makedirs(path_working_test_images, exist_ok=True)\n",
    "os.makedirs(path_working_test_labels, exist_ok=True)\n",
    "\n",
    "# Copiar las imágenes de prueba al directorio de trabajo\n",
    "for image_name in os.listdir(path_test_images):\n",
    "    shutil.copy(os.path.join(path_test_images, image_name), os.path.join(path_working_test_images, image_name))\n",
    "\n",
    "# Copiar las etiquetas de prueba al directorio de trabajo\n",
    "for label_name in os.listdir(path_test_labels):\n",
    "    shutil.copy(os.path.join(path_test_labels, label_name), os.path.join(path_working_test_labels, label_name))\n",
    "\n",
    "# Verificar y completar etiquetas de prueba\n",
    "test_images = os.listdir(path_working_test_images)\n",
    "\n",
    "for image_name in test_images:\n",
    "    base_name = image_name[:-4]\n",
    "    label_name = base_name + '.txt'\n",
    "    label_path = os.path.join(path_working_test_labels, label_name)\n",
    "\n",
    "    if not os.path.exists(label_path):\n",
    "        with open(label_path, 'w') as f:\n",
    "            pass\n",
    "        print(f\"Se ha creado un archivo de etiqueta vacío para {image_name}\")\n",
    "\n",
    "# Crear DataFrames para los datos de entrenamiento y prueba\n",
    "data = pd.DataFrame({'image': os.listdir(path_images), 'label': os.listdir(path_labels)})\n",
    "test_data = pd.DataFrame({'image': os.listdir(path_working_test_images), 'label': os.listdir(path_working_test_labels)})\n",
    "\n",
    "# Imprimir DataFrames para verificar\n",
    "print(\"Datos de entrenamiento:\")\n",
    "print(data)\n",
    "print(\"\\nDatos de prueba:\")\n",
    "print(test_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e64c1e9",
   "metadata": {
    "papermill": {
     "duration": 0.009103,
     "end_time": "2024-07-08T07:48:41.240751",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.231648",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Cargar los datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c649e169",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:41.262128Z",
     "iopub.status.busy": "2024-07-08T07:48:41.261218Z",
     "iopub.status.idle": "2024-07-08T07:48:41.269213Z",
     "shell.execute_reply": "2024-07-08T07:48:41.268307Z"
    },
    "papermill": {
     "duration": 0.020179,
     "end_time": "2024-07-08T07:48:41.271236",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.251057",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "images = os.listdir(path_images)\n",
    "labels = os.listdir(path_labels)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1f9171be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:41.290750Z",
     "iopub.status.busy": "2024-07-08T07:48:41.290472Z",
     "iopub.status.idle": "2024-07-08T07:48:41.295066Z",
     "shell.execute_reply": "2024-07-08T07:48:41.294177Z"
    },
    "papermill": {
     "duration": 0.016862,
     "end_time": "2024-07-08T07:48:41.297306",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.280444",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cant imag: 1294\n",
      "Cant labels: 1294\n"
     ]
    }
   ],
   "source": [
    "print(f'Cant imag: {len(images)}')\n",
    "print(f'Cant labels: {len(labels)}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e849dea",
   "metadata": {
    "papermill": {
     "duration": 0.008896,
     "end_time": "2024-07-08T07:48:41.315307",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.306411",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Asegurarse de que las imágenes y las etiquetas coinciden"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8494909e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:41.334808Z",
     "iopub.status.busy": "2024-07-08T07:48:41.334482Z",
     "iopub.status.idle": "2024-07-08T07:48:41.338511Z",
     "shell.execute_reply": "2024-07-08T07:48:41.337639Z"
    },
    "papermill": {
     "duration": 0.016022,
     "end_time": "2024-07-08T07:48:41.340505",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.324483",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "val_data=test_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "055c5e09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:41.360679Z",
     "iopub.status.busy": "2024-07-08T07:48:41.360415Z",
     "iopub.status.idle": "2024-07-08T07:48:41.368354Z",
     "shell.execute_reply": "2024-07-08T07:48:41.367487Z"
    },
    "papermill": {
     "duration": 0.020393,
     "end_time": "2024-07-08T07:48:41.370445",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.350052",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    Strisce--495-_jpg.rf.50856c38477352199e7490b8f...\n",
       "1    Strisce--405-_jpg.rf.1fcae596eba78426428b006ee...\n",
       "2    Strisce--6-_jpg.rf.2ef258519c793bfa685db128e50...\n",
       "3    Strisce--105-_jpg.rf.16ab0e51e3a52d6520b0c449d...\n",
       "4    Strisce--307-_jpg.rf.f7a359045d1d078e98b685170...\n",
       "Name: image, dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "val_data['image'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "63dff143",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:41.390943Z",
     "iopub.status.busy": "2024-07-08T07:48:41.390216Z",
     "iopub.status.idle": "2024-07-08T07:48:44.073861Z",
     "shell.execute_reply": "2024-07-08T07:48:44.072978Z"
    },
    "papermill": {
     "duration": 2.696297,
     "end_time": "2024-07-08T07:48:44.076217",
     "exception": false,
     "start_time": "2024-07-08T07:48:41.379920",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov8n.pt to 'yolov8n.pt'...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 6.25M/6.25M [00:00<00:00, 72.5MB/s]\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import shutil\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from ultralytics import YOLO\n",
    "#from ultralytics.utils import metrics\n",
    "#from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, roc_auc_score\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Configurar el modelo YOLOv8\n",
    "model = YOLO('yolov8n.pt')  # Puedes cambiar el modelo base según tus necesidades"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75c7d0c1",
   "metadata": {
    "papermill": {
     "duration": 0.010654,
     "end_time": "2024-07-08T07:48:44.097752",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.087098",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Crear Carpeta para guardar los resultados de la validación"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "54c4cb75",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.121265Z",
     "iopub.status.busy": "2024-07-08T07:48:44.120889Z",
     "iopub.status.idle": "2024-07-08T07:48:44.126017Z",
     "shell.execute_reply": "2024-07-08T07:48:44.124917Z"
    },
    "papermill": {
     "duration": 0.019868,
     "end_time": "2024-07-08T07:48:44.128500",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.108632",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "os.makedirs('/kaggle/working/validation_results', exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "90c20c4b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.151702Z",
     "iopub.status.busy": "2024-07-08T07:48:44.151308Z",
     "iopub.status.idle": "2024-07-08T07:48:44.158873Z",
     "shell.execute_reply": "2024-07-08T07:48:44.157707Z"
    },
    "papermill": {
     "duration": 0.0222,
     "end_time": "2024-07-08T07:48:44.161416",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.139216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "# Función para evaluar el modelo\n",
    "def evaluate_model(model,experiment_name:str):\n",
    "    yaml_content = \"\"\"\n",
    "                   \n",
    "\n",
    "                    train: /kaggle/working/\n",
    "                    val: /kaggle/working/test_folder/test_images\n",
    "\n",
    "\n",
    "                    nc: 1\n",
    "\n",
    "                    names:\n",
    "                         - crosswalk\n",
    "                    \"\"\"\n",
    "\n",
    "    # Guardar el archivo\n",
    "    with open('/kaggle/working/crosswalk_test.yaml', 'w') as file:\n",
    "        file.write(yaml_content)\n",
    "\n",
    "    print(\"Archivo .yaml creado con éxito.\")\n",
    "    \n",
    "   \n",
    "    predictions= model.val(data='/kaggle/working/crosswalk_test.yaml',project=f'/kaggle/working/validation_results', name=f'experiment{experiment_name}',save_json=True)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ed87062c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.187321Z",
     "iopub.status.busy": "2024-07-08T07:48:44.186195Z",
     "iopub.status.idle": "2024-07-08T07:48:44.192974Z",
     "shell.execute_reply": "2024-07-08T07:48:44.191853Z"
    },
    "papermill": {
     "duration": 0.022689,
     "end_time": "2024-07-08T07:48:44.195332",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.172643",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "# Directorio para guardar las métricas\n",
    "metrics_dir = '/kaggle/working/metrics'\n",
    "os.makedirs(metrics_dir, exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0af62338",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.219072Z",
     "iopub.status.busy": "2024-07-08T07:48:44.218124Z",
     "iopub.status.idle": "2024-07-08T07:48:44.223300Z",
     "shell.execute_reply": "2024-07-08T07:48:44.222248Z"
    },
    "papermill": {
     "duration": 0.019196,
     "end_time": "2024-07-08T07:48:44.225416",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.206220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "# Parámetros para la condición de parada\n",
    "n_experiments = 5\n",
    "max_epochs = 150  # Número máximo de epochs para el entrenamiento\n",
    "patience = 10  # Número de epochs a esperar si no hay mejora en la precisión"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ca02a0c",
   "metadata": {
    "papermill": {
     "duration": 0.010399,
     "end_time": "2024-07-08T07:48:44.246375",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.235976",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Crear Carpeta para guardar los modelos finales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "01a7961b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.268082Z",
     "iopub.status.busy": "2024-07-08T07:48:44.267258Z",
     "iopub.status.idle": "2024-07-08T07:48:44.271800Z",
     "shell.execute_reply": "2024-07-08T07:48:44.270932Z"
    },
    "papermill": {
     "duration": 0.017537,
     "end_time": "2024-07-08T07:48:44.273691",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.256154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "save_weights_dir='/kaggle/working/save_weights'\n",
    "os.makedirs('/kaggle/working/save_weights', exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f57169a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.294234Z",
     "iopub.status.busy": "2024-07-08T07:48:44.293913Z",
     "iopub.status.idle": "2024-07-08T07:48:44.298269Z",
     "shell.execute_reply": "2024-07-08T07:48:44.297335Z"
    },
    "papermill": {
     "duration": 0.016649,
     "end_time": "2024-07-08T07:48:44.300094",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.283445",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "os.environ['WANDB_DISABLED'] = 'true'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "da770615",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T07:48:44.321559Z",
     "iopub.status.busy": "2024-07-08T07:48:44.320909Z",
     "iopub.status.idle": "2024-07-08T08:24:44.198870Z",
     "shell.execute_reply": "2024-07-08T08:24:44.197577Z"
    },
    "papermill": {
     "duration": 2159.892098,
     "end_time": "2024-07-08T08:24:44.201829",
     "exception": false,
     "start_time": "2024-07-08T07:48:44.309731",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Experimento 1\n",
      "Copiando a las carpetas de entrenamiento\n",
      "Copiado\n",
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/working/data_1.yaml, epochs=150, time=None, patience=10, batch=16, imgsz=512, save=True, save_period=25, cache=True, device=[0, 1], workers=8, project=proyect_experiment1, name=train, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=123, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=proyect_experiment1/train\n",
      "Downloading https://ultralytics.com/assets/Arial.ttf to '/root/.config/Ultralytics/Arial.ttf'...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 755k/755k [00:00<00:00, 14.2MB/s]\n",
      "2024-07-08 07:49:08,933\tINFO util.py:124 -- Outdated packages:\n",
      "  ipywidgets==7.7.1 found, needs ipywidgets>=8\n",
      "Run `pip install -U ipywidgets`, then restart the notebook server for rich notebook output.\n",
      "2024-07-08 07:49:09,967\tINFO util.py:124 -- Outdated packages:\n",
      "  ipywidgets==7.7.1 found, needs ipywidgets>=8\n",
      "Run `pip install -U ipywidgets`, then restart the notebook server for rich notebook output.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overriding model.yaml nc=80 with nc=1\n",
      "\n",
      "                   from  n    params  module                                       arguments                     \n",
      "  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n",
      "  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n",
      "  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n",
      "  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n",
      "  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n",
      "  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n",
      "  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n",
      "  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n",
      "  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n",
      "  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n",
      " 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n",
      " 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n",
      " 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n",
      " 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n",
      " 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n",
      " 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n",
      " 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \n",
      "Model summary: 225 layers, 3011043 parameters, 3011027 gradients, 8.2 GFLOPs\n",
      "\n",
      "Transferred 319/355 items from pretrained weights\n",
      "\u001b[34m\u001b[1mDDP:\u001b[0m debug command /opt/conda/bin/python -m torch.distributed.run --nproc_per_node 2 --master_port 34657 /root/.config/Ultralytics/DDP/_temp_9rv0uc7k133521436825136.py\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir proyect_experiment1/train', view at http://localhost:6006/\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb: Tracking run with wandb version 0.17.0\n",
      "wandb: W&B syncing is set to `offline` in this directory.  \n",
      "wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overriding model.yaml nc=80 with nc=1\n",
      "Transferred 319/355 items from pretrained weights\n",
      "Freezing layer 'model.22.dfl.conv.weight'\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks with YOLOv8n...\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/experiment_1/train_data_1/labels... 825 images, 226 backgrounds, 0 corrupt: 100%|██████████| 1035/1035 [00:00<00:00, 1279.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /kaggle/working/experiment_1/train_data_1/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.8GB RAM): 100%|██████████| 1035/1035 [00:01<00:00, 954.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/experiment_1/val_data_1/labels... 49 images, 211 backgrounds, 0 corrupt: 100%|██████████| 259/259 [00:00<00:00, 1873.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /kaggle/working/experiment_1/val_data_1/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 259/259 [00:00<00:00, 598.50it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting labels to proyect_experiment1/train/labels.jpg... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.000714, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\n",
      "Image sizes 512 train, 512 val\n",
      "Using 4 dataloader workers\n",
      "Logging results to \u001b[1mproyect_experiment1/train\u001b[0m\n",
      "Starting training for 150 epochs...\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      1/150     0.889G      1.728      2.828      1.728          8        512: 100%|██████████| 65/65 [00:12<00:00,  5.22it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:03<00:00,  5.43it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78   0.000965      0.962     0.0414     0.0169\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      2/150     0.841G      1.293      2.244      1.384         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.47it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 11.96it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0475      0.372     0.0461     0.0205\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      3/150     0.841G      1.239      1.908      1.334         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.72it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.92it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0657      0.179     0.0445     0.0217\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      4/150     0.835G       1.17      1.755      1.285         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.78it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.138     0.0769     0.0588      0.024\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      5/150     0.845G      1.144      1.698      1.281          6        512: 100%|██████████| 65/65 [00:08<00:00,  7.84it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0659      0.295     0.0532      0.024\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      6/150     0.847G      1.118       1.61      1.232         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.73it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0714      0.256     0.0581     0.0325\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      7/150     0.849G      1.086      1.452      1.208         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.76it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0532      0.577      0.047     0.0261\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      8/150     0.841G     0.9888      1.366      1.172         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.93it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.07it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0758      0.282     0.0636     0.0402\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      9/150     0.849G      1.002      1.313      1.155         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.85it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0869       0.41     0.0802      0.037\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     10/150     0.843G     0.9707      1.302      1.145         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.48it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0802      0.282     0.0618     0.0361\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     11/150     0.849G     0.9211      1.188      1.124         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.76it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.45it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0727      0.359     0.0685     0.0444\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     12/150     0.835G     0.8868      1.132      1.109         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0722      0.295     0.0503     0.0287\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     13/150     0.843G     0.8542      1.108      1.082          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.78it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0993      0.308     0.0857     0.0539\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     14/150     0.847G     0.8463      1.053      1.076         16        512: 100%|██████████| 65/65 [00:08<00:00,  7.74it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78        0.1      0.231     0.0664     0.0391\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     15/150     0.847G     0.8243      1.065      1.076         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.85it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.30it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.101      0.256     0.0914     0.0615\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     16/150     0.835G     0.7925      1.022      1.063         19        512: 100%|██████████| 65/65 [00:08<00:00,  7.85it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0895      0.192     0.0678     0.0395\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     17/150     0.843G     0.7998      1.013      1.069         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.86it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 11.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0793      0.346     0.0706      0.046\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     18/150     0.847G     0.7784      0.978      1.059          7        512: 100%|██████████| 65/65 [00:08<00:00,  7.83it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.119      0.141     0.0676     0.0456\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     19/150     0.847G     0.7984     0.9768      1.066         19        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.59it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0789      0.378      0.063     0.0403\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     20/150     0.839G      0.789     0.9612      1.058         24        512: 100%|██████████| 65/65 [00:08<00:00,  7.86it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0745      0.231     0.0505     0.0313\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     21/150     0.847G      0.799     0.9702      1.058         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.73it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0672      0.449     0.0663     0.0436\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     22/150     0.847G     0.7545     0.9103      1.046         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.83it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0815      0.321     0.0666     0.0387\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     23/150     0.845G     0.7322     0.8745      1.036         23        512: 100%|██████████| 65/65 [00:08<00:00,  7.79it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 11.96it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0771      0.333     0.0669     0.0422\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     24/150     0.839G     0.7396     0.8907      1.037         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.78it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0805      0.179     0.0738     0.0451\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     25/150     0.847G     0.7146     0.8311      1.028         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.86it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.113      0.179     0.0699     0.0478\n",
      "\u001b[34m\u001b[1mEarlyStopping: \u001b[0mTraining stopped early as no improvement observed in last 10 epochs. Best results observed at epoch 15, best model saved as best.pt.\n",
      "To update EarlyStopping(patience=10) pass a new patience value, i.e. `patience=300` or use `patience=0` to disable EarlyStopping.\n",
      "\n",
      "25 epochs completed in 0.077 hours.\n",
      "Optimizer stripped from proyect_experiment1/train/weights/last.pt, 6.2MB\n",
      "Optimizer stripped from proyect_experiment1/train/weights/best.pt, 6.2MB\n",
      "\n",
      "Validating proyect_experiment1/train/weights/best.pt...\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:02<00:00,  6.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0994      0.256     0.0914     0.0616\n",
      "Speed: 0.5ms preprocess, 3.2ms inference, 0.0ms loss, 2.5ms postprocess per image\n",
      "Results saved to \u001b[1mproyect_experiment1/train\u001b[0m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb:                                                                                \n",
      "wandb: \n",
      "wandb: Run history:\n",
      "wandb:                  lr/pg0 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆\n",
      "wandb:                  lr/pg1 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆\n",
      "wandb:                  lr/pg2 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆\n",
      "wandb:        metrics/mAP50(B) ▁▂▁▃▃▃▂▄▆▄▅▂▇▅█▅▅▅▄▂▄▅▅▆█\n",
      "wandb:     metrics/mAP50-95(B) ▁▂▂▂▂▃▂▅▄▄▅▃▇▄█▅▆▆▅▃▅▄▅▅█\n",
      "wandb:    metrics/precision(B) ▁▃▄█▄▅▄▅▅▅▅▅▆▆▆▆▅▇▅▅▄▅▅▅▆\n",
      "wandb:       metrics/recall(B) █▃▂▁▃▂▅▃▄▃▃▃▃▂▂▂▃▂▃▂▄▃▃▂▂\n",
      "wandb:            model/GFLOPs ▁\n",
      "wandb:        model/parameters ▁\n",
      "wandb: model/speed_PyTorch(ms) ▁\n",
      "wandb:          train/box_loss █▅▅▄▄▄▄▃▃▃▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁\n",
      "wandb:          train/cls_loss █▆▅▄▄▄▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁\n",
      "wandb:          train/dfl_loss █▅▄▄▄▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁\n",
      "wandb:            val/box_loss █▇█▅▅▅▄▃▅▃▃▄▄▄▄▄▃▂▄▄▂▂▂▁▂\n",
      "wandb:            val/cls_loss ▅▄█▄▂▃▂▂▁▃▂▂▃▂▃▂▁▁▂▂▁▂▂▂▁\n",
      "wandb:            val/dfl_loss ▆█▇▅▄▆▄▂▄▄▂▃▄▄▅▃▃▂▄▄▂▃▂▁▂\n",
      "wandb: \n",
      "wandb: Run summary:\n",
      "wandb:                  lr/pg0 0.0006\n",
      "wandb:                  lr/pg1 0.0006\n",
      "wandb:                  lr/pg2 0.0006\n",
      "wandb:        metrics/mAP50(B) 0.09136\n",
      "wandb:     metrics/mAP50-95(B) 0.06158\n",
      "wandb:    metrics/precision(B) 0.09941\n",
      "wandb:       metrics/recall(B) 0.25641\n",
      "wandb:            model/GFLOPs 8.194\n",
      "wandb:        model/parameters 3011043\n",
      "wandb: model/speed_PyTorch(ms) 3.264\n",
      "wandb:          train/box_loss 0.71457\n",
      "wandb:          train/cls_loss 0.83106\n",
      "wandb:          train/dfl_loss 1.02806\n",
      "wandb:            val/box_loss 1.20343\n",
      "wandb:            val/cls_loss 5.1144\n",
      "wandb:            val/dfl_loss 1.40257\n",
      "wandb: \n",
      "wandb: You can sync this run to the cloud by running:\n",
      "wandb: wandb sync /kaggle/working/wandb/offline-run-20240708_074941-khel7p6m\n",
      "wandb: Find logs at: ./wandb/offline-run-20240708_074941-khel7p6m/logs\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/test_folder/test_images... 0 images, 229 backgrounds, 0 corrupt: 100%|██████████| 229/229 [00:00<00:00, 2110.83it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mWARNING ⚠️ No labels found in /kaggle/working/test_folder/test_images.cache. See https://docs.ultralytics.com/datasets for dataset formatting guidance.\n",
      "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /kaggle/working/test_folder/test_images.cache\n",
      "WARNING ⚠️ No labels found in /kaggle/working/test_folder/test_images.cache, training may not work correctly. See https://docs.ultralytics.com/datasets for dataset formatting guidance.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 229/229 [00:00<00:00, 1125.15it/s]\n",
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 15/15 [00:02<00:00,  5.30it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        229          0          0          0          0          0\n",
      "WARNING ⚠️ no labels found in detect set, can not compute metrics without labels\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Speed: 0.3ms preprocess, 4.7ms inference, 0.0ms loss, 1.9ms postprocess per image\n",
      "Saving /kaggle/working/validation_results/experimentexperiment_0/predictions.json...\n",
      "Results saved to \u001b[1m/kaggle/working/validation_results/experimentexperiment_0\u001b[0m\n",
      "Experimento 2\n",
      "Copiando a las carpetas de entrenamiento\n",
      "Copiado\n",
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/working/data_2.yaml, epochs=150, time=None, patience=10, batch=16, imgsz=512, save=True, save_period=25, cache=True, device=[0, 1], workers=8, project=proyect_experiment1, name=train2, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=123, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.0, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=proyect_experiment1/train2\n",
      "\n",
      "                   from  n    params  module                                       arguments                     \n",
      "  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n",
      "  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n",
      "  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n",
      "  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n",
      "  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n",
      "  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n",
      "  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n",
      "  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n",
      "  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n",
      "  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n",
      " 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n",
      " 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n",
      " 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n",
      " 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n",
      " 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n",
      " 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n",
      " 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \n",
      "Model summary: 225 layers, 3011043 parameters, 3011027 gradients, 8.2 GFLOPs\n",
      "\n",
      "Transferred 70/355 items from pretrained weights\n",
      "\u001b[34m\u001b[1mDDP:\u001b[0m debug command /opt/conda/bin/python -m torch.distributed.run --nproc_per_node 2 --master_port 38993 /root/.config/Ultralytics/DDP/_temp_iluq98jj133519126953552.py\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir proyect_experiment1/train2', view at http://localhost:6006/\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb: Tracking run with wandb version 0.17.0\n",
      "wandb: W&B syncing is set to `offline` in this directory.  \n",
      "wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overriding model.yaml nc=80 with nc=1\n",
      "Transferred 319/355 items from pretrained weights\n",
      "Freezing layer 'model.22.dfl.conv.weight'\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks with YOLOv8n...\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/experiment_2/train_data_2/labels... 825 images, 226 backgrounds, 0 corrupt: 100%|██████████| 1035/1035 [00:00<00:00, 1184.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /kaggle/working/experiment_2/train_data_2/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.8GB RAM): 100%|██████████| 1035/1035 [00:01<00:00, 943.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/experiment_2/val_data_2/labels... 49 images, 211 backgrounds, 0 corrupt: 100%|██████████| 259/259 [00:00<00:00, 2603.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /kaggle/working/experiment_2/val_data_2/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 259/259 [00:00<00:00, 601.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting labels to proyect_experiment1/train2/labels.jpg... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.000714, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\n",
      "Image sizes 512 train, 512 val\n",
      "Using 4 dataloader workers\n",
      "Logging results to \u001b[1mproyect_experiment1/train2\u001b[0m\n",
      "Starting training for 150 epochs...\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      1/150     0.893G      1.772      2.861      1.755          8        512: 100%|██████████| 65/65 [00:11<00:00,  5.63it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00,  9.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0255      0.615     0.0503     0.0209\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      2/150     0.841G      1.285      2.223      1.402         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.47it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 11.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0803      0.269     0.0541     0.0217\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      3/150     0.841G      1.235      1.927      1.332         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.27it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0581      0.115     0.0348     0.0184\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      4/150     0.839G      1.197      1.775      1.282         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0483      0.308     0.0448     0.0207\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      5/150     0.849G      1.136      1.695      1.262          5        512: 100%|██████████| 65/65 [00:08<00:00,  7.82it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.94it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0687      0.372      0.052     0.0258\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      6/150     0.845G      1.051      1.602      1.218         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.43it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0656      0.218     0.0562      0.029\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      7/150     0.849G      1.073      1.468      1.221         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.67it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.68it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0497      0.272     0.0493      0.028\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      8/150     0.839G     0.9676       1.36      1.173         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.88it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.06it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0812       0.41     0.0745     0.0451\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      9/150     0.849G     0.9954      1.361      1.175         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.36it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0834      0.346     0.0627     0.0357\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     10/150     0.843G     0.9644      1.327      1.163         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.75it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.98it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0552      0.397     0.0503     0.0289\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     11/150     0.847G     0.9086      1.197      1.118         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.73it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0904      0.256     0.0758     0.0498\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     12/150     0.835G     0.8768      1.141      1.109         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.39it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.52it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0581      0.269     0.0488     0.0288\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     13/150     0.843G     0.8709       1.14      1.097          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.75it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0742      0.231     0.0649     0.0379\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     14/150     0.847G     0.8555      1.072      1.083         16        512: 100%|██████████| 65/65 [00:08<00:00,  7.61it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0787      0.216     0.0583     0.0363\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     15/150     0.847G     0.8523      1.104      1.081         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0708      0.551     0.0691     0.0418\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     16/150     0.835G      0.804      1.007      1.074         20        512: 100%|██████████| 65/65 [00:08<00:00,  7.70it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0998      0.269     0.0683     0.0388\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     17/150     0.843G     0.8524      1.021       1.08         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.86it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.21it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0628      0.628     0.0571      0.033\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     18/150     0.847G     0.8043      1.014       1.08          7        512: 100%|██████████| 65/65 [00:08<00:00,  7.37it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.102      0.205     0.0752     0.0457\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     19/150     0.847G     0.8136      1.001      1.071         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.69it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0862      0.282     0.0665     0.0382\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     20/150     0.839G     0.7856      0.966      1.061         22        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0614       0.41     0.0556     0.0325\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     21/150     0.847G     0.7808     0.9448      1.051         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.093      0.269     0.0731     0.0441\n",
      "\u001b[34m\u001b[1mEarlyStopping: \u001b[0mTraining stopped early as no improvement observed in last 10 epochs. Best results observed at epoch 11, best model saved as best.pt.\n",
      "To update EarlyStopping(patience=10) pass a new patience value, i.e. `patience=300` or use `patience=0` to disable EarlyStopping.\n",
      "\n",
      "21 epochs completed in 0.065 hours.\n",
      "Optimizer stripped from proyect_experiment1/train2/weights/last.pt, 6.2MB\n",
      "Optimizer stripped from proyect_experiment1/train2/weights/best.pt, 6.2MB\n",
      "\n",
      "Validating proyect_experiment1/train2/weights/best.pt...\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:02<00:00,  6.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0904      0.256     0.0758     0.0498\n",
      "Speed: 0.2ms preprocess, 1.8ms inference, 0.0ms loss, 1.5ms postprocess per image\n",
      "Results saved to \u001b[1mproyect_experiment1/train2\u001b[0m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb:                                                                                \n",
      "wandb: \n",
      "wandb: Run history:\n",
      "wandb:                  lr/pg0 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇\n",
      "wandb:                  lr/pg1 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇\n",
      "wandb:                  lr/pg2 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇\n",
      "wandb:        metrics/mAP50(B) ▄▄▁▃▄▅▃█▆▄█▃▆▅▇▇▅█▆▅█\n",
      "wandb:     metrics/mAP50-95(B) ▂▂▁▂▃▃▃▇▅▃█▃▅▅▆▆▄▇▅▄█\n",
      "wandb:    metrics/precision(B) ▁▆▄▃▅▅▃▆▆▄▇▄▅▆▅█▄█▇▄▇\n",
      "wandb:       metrics/recall(B) █▃▁▄▄▂▃▅▄▅▃▃▃▂▇▃█▂▃▅▃\n",
      "wandb:            model/GFLOPs ▁\n",
      "wandb:        model/parameters ▁\n",
      "wandb: model/speed_PyTorch(ms) ▁\n",
      "wandb:          train/box_loss █▅▄▄▄▃▃▂▃▂▂▂▂▂▂▁▂▁▁▁▁\n",
      "wandb:          train/cls_loss █▆▅▄▄▃▃▃▃▂▂▂▂▁▂▁▁▁▁▁▁\n",
      "wandb:          train/dfl_loss █▄▄▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁\n",
      "wandb:            val/box_loss █▇▅▄▄▃▂▃▃▃▂▂▃▃▁▂▁▂▂▂▃\n",
      "wandb:            val/cls_loss ▆█▆▄▂▂▄▄▂▅▂▄▅▃▄▁▂▃▂▂▃\n",
      "wandb:            val/dfl_loss ▇█▅▄▅▃▃▄▄▄▂▄▅▂▁▂▁▃▂▃▃\n",
      "wandb: \n",
      "wandb: Run summary:\n",
      "wandb:                  lr/pg0 0.00062\n",
      "wandb:                  lr/pg1 0.00062\n",
      "wandb:                  lr/pg2 0.00062\n",
      "wandb:        metrics/mAP50(B) 0.07579\n",
      "wandb:     metrics/mAP50-95(B) 0.04981\n",
      "wandb:    metrics/precision(B) 0.09038\n",
      "wandb:       metrics/recall(B) 0.25641\n",
      "wandb:            model/GFLOPs 8.194\n",
      "wandb:        model/parameters 3011043\n",
      "wandb: model/speed_PyTorch(ms) 3.151\n",
      "wandb:          train/box_loss 0.78081\n",
      "wandb:          train/cls_loss 0.94476\n",
      "wandb:          train/dfl_loss 1.05056\n",
      "wandb:            val/box_loss 1.48115\n",
      "wandb:            val/cls_loss 6.64024\n",
      "wandb:            val/dfl_loss 1.53476\n",
      "wandb: \n",
      "wandb: You can sync this run to the cloud by running:\n",
      "wandb: wandb sync /kaggle/working/wandb/offline-run-20240708_075533-2xhai6l4\n",
      "wandb: Find logs at: ./wandb/offline-run-20240708_075533-2xhai6l4/logs\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/test_folder/test_images.cache... 0 images, 229 backgrounds, 0 corrupt: 100%|██████████| 229/229 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING ⚠️ No labels found in /kaggle/working/test_folder/test_images.cache, training may not work correctly. See https://docs.ultralytics.com/datasets for dataset formatting guidance.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 229/229 [00:10<00:00, 22.66it/s]  \n",
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 15/15 [00:03<00:00,  4.63it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        229          0          0          0          0          0\n",
      "WARNING ⚠️ no labels found in detect set, can not compute metrics without labels\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Speed: 0.2ms preprocess, 2.9ms inference, 0.0ms loss, 1.6ms postprocess per image\n",
      "Saving /kaggle/working/validation_results/experimentexperiment_1/predictions.json...\n",
      "Results saved to \u001b[1m/kaggle/working/validation_results/experimentexperiment_1\u001b[0m\n",
      "Experimento 3\n",
      "Copiando a las carpetas de entrenamiento\n",
      "Copiado\n",
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/working/data_3.yaml, epochs=150, time=None, patience=10, batch=16, imgsz=512, save=True, save_period=25, cache=True, device=[0, 1], workers=8, project=proyect_experiment1, name=train22, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=123, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.0, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=proyect_experiment1/train22\n",
      "\n",
      "                   from  n    params  module                                       arguments                     \n",
      "  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n",
      "  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n",
      "  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n",
      "  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n",
      "  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n",
      "  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n",
      "  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n",
      "  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n",
      "  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n",
      "  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n",
      " 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n",
      " 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n",
      " 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n",
      " 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n",
      " 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n",
      " 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n",
      " 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \n",
      "Model summary: 225 layers, 3011043 parameters, 3011027 gradients, 8.2 GFLOPs\n",
      "\n",
      "Transferred 70/355 items from pretrained weights\n",
      "\u001b[34m\u001b[1mDDP:\u001b[0m debug command /opt/conda/bin/python -m torch.distributed.run --nproc_per_node 2 --master_port 56489 /root/.config/Ultralytics/DDP/_temp__9u0jyi6133519126698528.py\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir proyect_experiment1/train22', view at http://localhost:6006/\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb: Tracking run with wandb version 0.17.0\n",
      "wandb: W&B syncing is set to `offline` in this directory.  \n",
      "wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overriding model.yaml nc=80 with nc=1\n",
      "Transferred 319/355 items from pretrained weights\n",
      "Freezing layer 'model.22.dfl.conv.weight'\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks with YOLOv8n...\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/experiment_3/train_data_3/labels... 825 images, 226 backgrounds, 0 corrupt: 100%|██████████| 1035/1035 [00:00<00:00, 1270.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /kaggle/working/experiment_3/train_data_3/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.8GB RAM): 100%|██████████| 1035/1035 [00:01<00:00, 952.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/experiment_3/val_data_3/labels... 49 images, 211 backgrounds, 0 corrupt: 100%|██████████| 259/259 [00:00<00:00, 2315.56it/s]\n",
      "  0%|          | 0/259 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /kaggle/working/experiment_3/val_data_3/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 259/259 [00:00<00:00, 605.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting labels to proyect_experiment1/train22/labels.jpg... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.000714, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\n",
      "Image sizes 512 train, 512 val\n",
      "Using 4 dataloader workers\n",
      "Logging results to \u001b[1mproyect_experiment1/train22\u001b[0m\n",
      "Starting training for 150 epochs...\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      1/150     0.889G      1.771      2.846      1.743          8        512: 100%|██████████| 65/65 [00:12<00:00,  5.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00,  9.51it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0628      0.205     0.0493     0.0215\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      2/150     0.841G      1.334      2.274      1.404         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.47it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0576      0.295     0.0486     0.0158\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      3/150     0.839G      1.256      1.933      1.349         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.77it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.28it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0613      0.231     0.0446     0.0224\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      4/150     0.839G      1.186      1.774      1.298         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.77it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.33it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0669      0.321     0.0471     0.0205\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      5/150     0.849G      1.149      1.675      1.263          6        512: 100%|██████████| 65/65 [00:08<00:00,  7.84it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0689      0.282     0.0555     0.0242\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      6/150     0.845G      1.116      1.578      1.232         16        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0759      0.385     0.0642     0.0346\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      7/150     0.849G      1.059      1.452      1.207         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.64it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0514      0.256     0.0411     0.0211\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      8/150     0.839G     0.9914      1.411      1.186         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.86it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0877      0.353     0.0713     0.0411\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      9/150     0.849G      1.013      1.352      1.172         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0718      0.385     0.0738      0.041\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     10/150     0.843G     0.9506      1.305      1.143         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.63it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.66it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0828      0.262     0.0728     0.0334\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     11/150     0.847G     0.9275      1.216      1.122         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.81it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.119      0.282     0.0917     0.0563\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     12/150     0.835G     0.8627      1.139      1.106         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.84it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0656      0.385     0.0581     0.0328\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     13/150     0.843G     0.8712      1.158      1.099          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.69it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0624      0.423     0.0656     0.0383\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     14/150     0.847G     0.8634      1.063       1.09         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.112      0.179     0.0759     0.0464\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     15/150     0.847G     0.8371      1.072      1.084         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.86it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 11.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0752      0.513     0.0691     0.0435\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     16/150     0.835G      0.827      1.027       1.07         19        512: 100%|██████████| 65/65 [00:08<00:00,  7.70it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0897      0.308     0.0725     0.0424\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     17/150     0.843G     0.8117     0.9876      1.068         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.75it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0605      0.487     0.0643     0.0407\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     18/150     0.847G     0.8036     0.9989      1.071          7        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0857      0.308     0.0743     0.0458\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     19/150     0.847G     0.7917     0.9853      1.055         19        512: 100%|██████████| 65/65 [00:08<00:00,  7.65it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.03it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.111      0.269     0.0993     0.0623\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     20/150     0.839G     0.7913     0.9752      1.051         24        512: 100%|██████████| 65/65 [00:08<00:00,  7.84it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.16it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.126      0.321      0.101     0.0645\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     21/150     0.847G      0.799     0.9608      1.061         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.83it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0994      0.269     0.0853     0.0569\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     22/150     0.843G     0.7498     0.9418      1.049         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.72it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0948      0.436     0.0875     0.0543\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     23/150     0.847G     0.7099     0.8491      1.029         23        512: 100%|██████████| 65/65 [00:08<00:00,  7.73it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78       0.11      0.298     0.0809     0.0534\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     24/150     0.839G     0.7299     0.8809      1.033         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.82it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0845      0.436     0.0977      0.067\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     25/150     0.847G     0.7087     0.8382       1.02         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.65it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0631      0.282     0.0656     0.0426\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     26/150     0.843G     0.7286     0.8833      1.018          7        512: 100%|██████████| 65/65 [00:08<00:00,  7.85it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0843      0.385     0.0904     0.0584\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     27/150     0.847G     0.7113     0.8483      1.021         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.85it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.26it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0986      0.282     0.0752     0.0503\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     28/150     0.839G     0.7054     0.8182      1.017         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.126      0.308     0.0961     0.0675\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     29/150     0.847G     0.7051     0.7954      1.013         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0792      0.397     0.0811     0.0518\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     30/150     0.843G     0.6962     0.7964      1.008         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.78it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.18it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.109      0.359     0.0926      0.059\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     31/150     0.847G     0.6778     0.7965      1.012         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.90it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.69it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.131      0.295      0.113     0.0797\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     32/150     0.839G     0.6272     0.7686     0.9952          8        512: 100%|██████████| 65/65 [00:08<00:00,  7.90it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0898      0.321     0.0787     0.0531\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     33/150     0.847G     0.6578     0.7832      1.003         20        512: 100%|██████████| 65/65 [00:08<00:00,  7.83it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.89it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0919      0.372        0.1     0.0666\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     34/150     0.843G     0.6605     0.7834     0.9978         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.55it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.103      0.359     0.0822     0.0521\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     35/150     0.847G     0.6461     0.7513     0.9949         23        512: 100%|██████████| 65/65 [00:08<00:00,  7.77it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.96it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0944      0.538     0.0811     0.0504\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     36/150     0.837G     0.6474     0.7638     0.9947         20        512: 100%|██████████| 65/65 [00:08<00:00,  7.67it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0854      0.485     0.0812     0.0509\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     37/150     0.847G     0.6277     0.7365     0.9927         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.59it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.71it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78       0.11      0.205     0.0956     0.0657\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     38/150     0.843G     0.6345     0.7718     0.9947         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.75it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.127       0.35       0.11     0.0777\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     39/150     0.847G     0.6329     0.7194     0.9909          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.66it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.60it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0902      0.333      0.079     0.0528\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     40/150     0.839G     0.6119     0.7408       0.99         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.76it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.104      0.269     0.0947     0.0664\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     41/150     0.847G     0.6329     0.7519     0.9944         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.112      0.256     0.0954     0.0682\n",
      "\u001b[34m\u001b[1mEarlyStopping: \u001b[0mTraining stopped early as no improvement observed in last 10 epochs. Best results observed at epoch 31, best model saved as best.pt.\n",
      "To update EarlyStopping(patience=10) pass a new patience value, i.e. `patience=300` or use `patience=0` to disable EarlyStopping.\n",
      "\n",
      "41 epochs completed in 0.123 hours.\n",
      "Optimizer stripped from proyect_experiment1/train22/weights/last.pt, 6.2MB\n",
      "Optimizer stripped from proyect_experiment1/train22/weights/best.pt, 6.2MB\n",
      "\n",
      "Validating proyect_experiment1/train22/weights/best.pt...\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:02<00:00,  6.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.125      0.308      0.113     0.0795\n",
      "Speed: 0.2ms preprocess, 6.2ms inference, 0.0ms loss, 1.8ms postprocess per image\n",
      "Results saved to \u001b[1mproyect_experiment1/train22\u001b[0m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb:                                                                                \n",
      "wandb: \n",
      "wandb: Run history:\n",
      "wandb:                  lr/pg0 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▅\n",
      "wandb:                  lr/pg1 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▅\n",
      "wandb:                  lr/pg2 ▁▅████████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▅\n",
      "wandb:        metrics/mAP50(B) ▂▂▁▂▂▃▁▄▄▄▆▃▃▄▄▄▃▄▇▇▅▆▅▇▃▆▄▆▅▆█▅▇▅▅▅▆█▅█\n",
      "wandb:     metrics/mAP50-95(B) ▂▁▂▂▂▃▂▄▄▃▅▃▃▄▄▄▄▄▆▆▆▅▅▇▄▆▅▇▅▆█▅▇▅▅▅▆█▅█\n",
      "wandb:    metrics/precision(B) ▂▂▂▂▃▃▁▄▃▄▇▂▂▆▃▄▂▄▆█▅▅▆▄▂▄▅█▃▆█▄▅▆▅▄▆█▄█\n",
      "wandb:       metrics/recall(B) ▁▃▂▄▃▅▂▄▅��▃▅▆▁█▃▇▃▃▄▃▆▃▆▃▅▃▃▅▄▃▄▅▄█▇▁▄▄▃\n",
      "wandb:            model/GFLOPs ▁\n",
      "wandb:        model/parameters ▁\n",
      "wandb: model/speed_PyTorch(ms) ▁\n",
      "wandb:          train/box_loss █▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁\n",
      "wandb:          train/cls_loss █▆▅▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁\n",
      "wandb:          train/dfl_loss █▅▄▄▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁\n",
      "wandb:            val/box_loss ██▆▅▆▅▆▃▃▅▃▃▃▂▂▃▃▃▃▃▂▃▁▃▃▁▃▁▂▂▂▁▂▂▁▂▁▁▁▂\n",
      "wandb:            val/cls_loss █▇▇▅▃▄▆▅▂▅▄▂▅▂▅▂▂▁▃▃▁▂▁▃▁▃▂▁▁▂▂▂▂▁▂▃▂▃▃▂\n",
      "wandb:            val/dfl_loss ▇█▅▅▆▅▅▃▃▄▃▃▃▂▃▃▃▃▃▃▂▃▁▃▃▂▃▁▂▂▂▂▁▂▁▂▁▁▁▁\n",
      "wandb: \n",
      "wandb: Run summary:\n",
      "wandb:                  lr/pg0 0.00053\n",
      "wandb:                  lr/pg1 0.00053\n",
      "wandb:                  lr/pg2 0.00053\n",
      "wandb:        metrics/mAP50(B) 0.11302\n",
      "wandb:     metrics/mAP50-95(B) 0.07954\n",
      "wandb:    metrics/precision(B) 0.12537\n",
      "wandb:       metrics/recall(B) 0.30769\n",
      "wandb:            model/GFLOPs 8.194\n",
      "wandb:        model/parameters 3011043\n",
      "wandb: model/speed_PyTorch(ms) 3.236\n",
      "wandb:          train/box_loss 0.63285\n",
      "wandb:          train/cls_loss 0.75189\n",
      "wandb:          train/dfl_loss 0.99441\n",
      "wandb:            val/box_loss 1.23583\n",
      "wandb:            val/cls_loss 5.10679\n",
      "wandb:            val/dfl_loss 1.34484\n",
      "wandb: \n",
      "wandb: You can sync this run to the cloud by running:\n",
      "wandb: wandb sync /kaggle/working/wandb/offline-run-20240708_080044-gjez8tb8\n",
      "wandb: Find logs at: ./wandb/offline-run-20240708_080044-gjez8tb8/logs\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/test_folder/test_images.cache... 0 images, 229 backgrounds, 0 corrupt: 100%|██████████| 229/229 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING ⚠️ No labels found in /kaggle/working/test_folder/test_images.cache, training may not work correctly. See https://docs.ultralytics.com/datasets for dataset formatting guidance.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 229/229 [00:00<00:00, 1148.72it/s]\n",
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 15/15 [00:02<00:00,  5.63it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        229          0          0          0          0          0\n",
      "WARNING ⚠️ no labels found in detect set, can not compute metrics without labels\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Speed: 0.2ms preprocess, 2.8ms inference, 0.0ms loss, 1.6ms postprocess per image\n",
      "Saving /kaggle/working/validation_results/experimentexperiment_2/predictions.json...\n",
      "Results saved to \u001b[1m/kaggle/working/validation_results/experimentexperiment_2\u001b[0m\n",
      "Experimento 4\n",
      "Copiando a las carpetas de entrenamiento\n",
      "Copiado\n",
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/working/data_4.yaml, epochs=150, time=None, patience=10, batch=16, imgsz=512, save=True, save_period=25, cache=True, device=[0, 1], workers=8, project=proyect_experiment1, name=train222, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=123, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.0, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=proyect_experiment1/train222\n",
      "\n",
      "                   from  n    params  module                                       arguments                     \n",
      "  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n",
      "  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n",
      "  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n",
      "  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n",
      "  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n",
      "  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n",
      "  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n",
      "  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n",
      "  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n",
      "  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n",
      " 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n",
      " 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n",
      " 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n",
      " 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n",
      " 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n",
      " 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n",
      " 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \n",
      "Model summary: 225 layers, 3011043 parameters, 3011027 gradients, 8.2 GFLOPs\n",
      "\n",
      "Transferred 70/355 items from pretrained weights\n",
      "\u001b[34m\u001b[1mDDP:\u001b[0m debug command /opt/conda/bin/python -m torch.distributed.run --nproc_per_node 2 --master_port 47537 /root/.config/Ultralytics/DDP/_temp_tt6jdlns133516839406848.py\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir proyect_experiment1/train222', view at http://localhost:6006/\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb: Tracking run with wandb version 0.17.0\n",
      "wandb: W&B syncing is set to `offline` in this directory.  \n",
      "wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overriding model.yaml nc=80 with nc=1\n",
      "Transferred 319/355 items from pretrained weights\n",
      "Freezing layer 'model.22.dfl.conv.weight'\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks with YOLOv8n...\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/experiment_4/train_data_4/labels... 825 images, 226 backgrounds, 0 corrupt: 100%|██████████| 1035/1035 [00:00<00:00, 1290.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /kaggle/working/experiment_4/train_data_4/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.8GB RAM): 100%|██████████| 1035/1035 [00:01<00:00, 954.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/experiment_4/val_data_4/labels... 49 images, 211 backgrounds, 0 corrupt: 100%|██████████| 259/259 [00:00<00:00, 2481.90it/s]\n",
      "  0%|          | 0/259 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /kaggle/working/experiment_4/val_data_4/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 259/259 [00:00<00:00, 591.68it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting labels to proyect_experiment1/train222/labels.jpg... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.000714, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\n",
      "Image sizes 512 train, 512 val\n",
      "Using 4 dataloader workers\n",
      "Logging results to \u001b[1mproyect_experiment1/train222\u001b[0m\n",
      "Starting training for 150 epochs...\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      1/150     0.889G      1.744      2.826      1.722          8        512: 100%|██████████| 65/65 [00:11<00:00,  5.46it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00,  9.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0626      0.256     0.0574     0.0257\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      2/150     0.839G      1.278      2.232      1.375         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.47it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0768      0.103     0.0436      0.017\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      3/150     0.841G      1.234      1.927       1.32         13        512: 100%|██████████| 65/65 [00:09<00:00,  7.08it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.77it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0579      0.244     0.0454     0.0192\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      4/150     0.841G      1.198       1.78      1.287         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0783      0.346     0.0567     0.0287\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      5/150     0.849G      1.165      1.685      1.255          5        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0591      0.244     0.0452     0.0228\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      6/150     0.845G      1.115      1.606      1.241         15        512: 100%|██████████| 65/65 [00:09<00:00,  7.18it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0721      0.372     0.0607     0.0343\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      7/150     0.849G      1.088      1.462       1.21         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.71it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.115      0.204     0.0755     0.0391\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      8/150     0.841G     0.9983      1.387      1.169         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.77it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.01it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78       0.14      0.231      0.109     0.0679\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      9/150     0.849G     0.9938      1.324      1.157         11        512: 100%|██████████| 65/65 [00:09<00:00,  7.21it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0746      0.423     0.0596     0.0337\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     10/150     0.843G     0.9633      1.306      1.156         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.85it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.103      0.218     0.0696     0.0402\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     11/150     0.849G     0.8954      1.194       1.11         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.73it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0752      0.462     0.0836     0.0529\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     12/150     0.835G     0.8777      1.139      1.105         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.22it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.41it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.104      0.244     0.0759     0.0444\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     13/150     0.843G     0.8739       1.15       1.09         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.77it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.93it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0701      0.256     0.0661     0.0386\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     14/150     0.847G     0.8592      1.089       1.08         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.79it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.14it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.145      0.167     0.0874      0.054\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     15/150     0.847G     0.8454      1.069      1.092         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.34it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0785      0.282     0.0739      0.046\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     16/150     0.835G     0.8008      1.036      1.072         19        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.89it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0922      0.372     0.0787     0.0462\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     17/150     0.843G     0.8056       1.02      1.071         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.83it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0598      0.436     0.0589     0.0361\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     18/150     0.847G     0.8025       1.01      1.081          7        512: 100%|██████████| 65/65 [00:08<00:00,  7.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.113      0.192     0.0733     0.0477\n",
      "\u001b[34m\u001b[1mEarlyStopping: \u001b[0mTraining stopped early as no improvement observed in last 10 epochs. Best results observed at epoch 8, best model saved as best.pt.\n",
      "To update EarlyStopping(patience=10) pass a new patience value, i.e. `patience=300` or use `patience=0` to disable EarlyStopping.\n",
      "\n",
      "18 epochs completed in 0.056 hours.\n",
      "Optimizer stripped from proyect_experiment1/train222/weights/last.pt, 6.2MB\n",
      "Optimizer stripped from proyect_experiment1/train222/weights/best.pt, 6.2MB\n",
      "\n",
      "Validating proyect_experiment1/train222/weights/best.pt...\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:02<00:00,  6.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78       0.14      0.231      0.109      0.068\n",
      "Speed: 0.3ms preprocess, 2.8ms inference, 0.0ms loss, 1.6ms postprocess per image\n",
      "Results saved to \u001b[1mproyect_experiment1/train222\u001b[0m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb:                                                                                \n",
      "wandb: \n",
      "wandb: Run history:\n",
      "wandb:                  lr/pg0 ▁▅████████▇▇▇▇▇▇▇▇\n",
      "wandb:                  lr/pg1 ▁▅████████▇▇▇▇▇▇▇▇\n",
      "wandb:                  lr/pg2 ▁▅████████▇▇▇▇▇▇▇▇\n",
      "wandb:        metrics/mAP50(B) ▂▁▁▂▁▃▄█▃▄▅▄▃▆▄▅▃█\n",
      "wandb:     metrics/mAP50-95(B) ▂▁▁▃▂▃▄█▃▄▆▅▄▆▅▅▄█\n",
      "wandb:    metrics/precision(B) ▁▃▁▃▁▂▆█▂▅▂▅▂█▃▄▁█\n",
      "wandb:       metrics/recall(B) ▄▁▄▆▄▆▃▄▇▃█▄▄▂▅▆█▄\n",
      "wandb:            model/GFLOPs ▁\n",
      "wandb:        model/parameters ▁\n",
      "wandb: model/speed_PyTorch(ms) ▁\n",
      "wandb:          train/box_loss █▅▄▄▄▃▃▂▂▂▂▂▂▁▁▁▁▁\n",
      "wandb:          train/cls_loss █▆▅▄▄▃▃▂▂▂▂▁▂▁▁▁▁▁\n",
      "wandb:          train/dfl_loss █▄▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁\n",
      "wandb:            val/box_loss ▅█▆▄▄▂▄▃▃▃▂▂▂▂▁▃▁▁\n",
      "wandb:            val/cls_loss ▆█▅█▄▄▂▃▂▃▂▄▂▂▁▃▅▁\n",
      "wandb:            val/dfl_loss ▄█▆▆▅▃▅▂▄▃▁▃▃▂▁▃▂▂\n",
      "wandb: \n",
      "wandb: Run summary:\n",
      "wandb:                  lr/pg0 0.00063\n",
      "wandb:                  lr/pg1 0.00063\n",
      "wandb:                  lr/pg2 0.00063\n",
      "wandb:        metrics/mAP50(B) 0.10915\n",
      "wandb:     metrics/mAP50-95(B) 0.06804\n",
      "wandb:    metrics/precision(B) 0.14026\n",
      "wandb:       metrics/recall(B) 0.23077\n",
      "wandb:            model/GFLOPs 8.194\n",
      "wandb:        model/parameters 3011043\n",
      "wandb: model/speed_PyTorch(ms) 3.038\n",
      "wandb:          train/box_loss 0.80245\n",
      "wandb:          train/cls_loss 1.00999\n",
      "wandb:          train/dfl_loss 1.0808\n",
      "wandb:            val/box_loss 1.35645\n",
      "wandb:            val/cls_loss 5.26793\n",
      "wandb:            val/dfl_loss 1.50638\n",
      "wandb: \n",
      "wandb: You can sync this run to the cloud by running:\n",
      "wandb: wandb sync /kaggle/working/wandb/offline-run-20240708_080915-q7axm2je\n",
      "wandb: Find logs at: ./wandb/offline-run-20240708_080915-q7axm2je/logs\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/test_folder/test_images.cache... 0 images, 229 backgrounds, 0 corrupt: 100%|██████████| 229/229 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING ⚠️ No labels found in /kaggle/working/test_folder/test_images.cache, training may not work correctly. See https://docs.ultralytics.com/datasets for dataset formatting guidance.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 229/229 [00:00<00:00, 1107.03it/s]\n",
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 15/15 [00:23<00:00,  1.57s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        229          0          0          0          0          0\n",
      "WARNING ⚠️ no labels found in detect set, can not compute metrics without labels\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Speed: 0.2ms preprocess, 3.0ms inference, 0.0ms loss, 6.9ms postprocess per image\n",
      "Saving /kaggle/working/validation_results/experimentexperiment_3/predictions.json...\n",
      "Results saved to \u001b[1m/kaggle/working/validation_results/experimentexperiment_3\u001b[0m\n",
      "Experimento 5\n",
      "Copiando a las carpetas de entrenamiento\n",
      "Copiado\n",
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mengine/trainer: \u001b[0mtask=detect, mode=train, model=yolov8n.pt, data=/kaggle/working/data_5.yaml, epochs=150, time=None, patience=10, batch=16, imgsz=512, save=True, save_period=25, cache=True, device=[0, 1], workers=8, project=proyect_experiment1, name=train2222, exist_ok=False, pretrained=True, optimizer=auto, verbose=True, seed=123, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=10, resume=False, amp=True, fraction=1.0, profile=False, freeze=None, multi_scale=False, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, vid_stride=1, stream_buffer=False, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, embed=None, show=False, save_frames=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, show_boxes=True, line_width=None, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.0, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, bgr=0.0, mosaic=1.0, mixup=0.0, copy_paste=0.0, auto_augment=randaugment, erasing=0.4, crop_fraction=1.0, cfg=None, tracker=botsort.yaml, save_dir=proyect_experiment1/train2222\n",
      "\n",
      "                   from  n    params  module                                       arguments                     \n",
      "  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n",
      "  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n",
      "  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n",
      "  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n",
      "  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n",
      "  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n",
      "  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n",
      "  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n",
      "  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n",
      "  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n",
      " 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n",
      " 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n",
      " 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n",
      " 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n",
      " 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n",
      " 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n",
      " 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n",
      " 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n",
      " 22        [15, 18, 21]  1    751507  ultralytics.nn.modules.head.Detect           [1, [64, 128, 256]]           \n",
      "Model summary: 225 layers, 3011043 parameters, 3011027 gradients, 8.2 GFLOPs\n",
      "\n",
      "Transferred 70/355 items from pretrained weights\n",
      "\u001b[34m\u001b[1mDDP:\u001b[0m debug command /opt/conda/bin/python -m torch.distributed.run --nproc_per_node 2 --master_port 51805 /root/.config/Ultralytics/DDP/_temp_mqrgybt8133517575487936.py\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir proyect_experiment1/train2222', view at http://localhost:6006/\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb: Tracking run with wandb version 0.17.0\n",
      "wandb: W&B syncing is set to `offline` in this directory.  \n",
      "wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overriding model.yaml nc=80 with nc=1\n",
      "Transferred 319/355 items from pretrained weights\n",
      "Freezing layer 'model.22.dfl.conv.weight'\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks with YOLOv8n...\n",
      "\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/experiment_5/train_data_5/labels... 825 images, 226 backgrounds, 0 corrupt: 100%|██████████| 1035/1035 [00:00<00:00, 1310.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mNew cache created: /kaggle/working/experiment_5/train_data_5/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.8GB RAM): 100%|██████████| 1035/1035 [00:01<00:00, 914.27it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/experiment_5/val_data_5/labels... 49 images, 211 backgrounds, 0 corrupt: 100%|██████████| 259/259 [00:00<00:00, 1530.23it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mNew cache created: /kaggle/working/experiment_5/val_data_5/labels.cache\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 259/259 [00:00<00:00, 625.02it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plotting labels to proyect_experiment1/train2222/labels.jpg... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n",
      "\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.000714, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\n",
      "\u001b[34m\u001b[1mTensorBoard: \u001b[0mmodel graph visualization added ✅\n",
      "Image sizes 512 train, 512 val\n",
      "Using 4 dataloader workers\n",
      "Logging results to \u001b[1mproyect_experiment1/train2222\u001b[0m\n",
      "Starting training for 150 epochs...\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      1/150     0.893G      1.739       2.82      1.707          8        512: 100%|██████████| 65/65 [00:11<00:00,  5.59it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00,  9.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0735     0.0769     0.0455      0.015\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      2/150     0.841G      1.275      2.206      1.355         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0599      0.256      0.046     0.0232\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      3/150     0.841G      1.223      1.891      1.299         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.76it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0561      0.244     0.0449     0.0231\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      4/150     0.837G      1.176      1.752      1.269         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.80it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.20it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0593      0.308     0.0528      0.025\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      5/150     0.845G      1.131      1.664       1.24          5        512: 100%|██████████| 65/65 [00:08<00:00,  7.65it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.086      0.231     0.0621     0.0293\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      6/150     0.849G      1.088      1.602       1.21         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.41it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.00it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0772      0.218     0.0566     0.0325\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      7/150     0.849G      1.079      1.443      1.201         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.78it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.08it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0694      0.423     0.0664     0.0343\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      8/150     0.839G     0.9628      1.376      1.159         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.61it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.86it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0944      0.141     0.0652     0.0384\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "      9/150     0.849G     0.9915      1.351       1.15         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.46it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.117      0.167     0.0751     0.0464\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     10/150     0.843G     0.9558      1.293      1.137         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.82it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.20it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0924      0.244     0.0678     0.0406\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     11/150     0.847G     0.9365      1.217      1.117         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.60it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.108       0.41     0.0868     0.0493\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     12/150     0.835G     0.8864      1.167      1.107         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.38it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.069      0.308     0.0623     0.0388\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     13/150     0.843G     0.9121      1.164      1.099          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.88it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0788      0.205     0.0606     0.0383\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     14/150     0.847G     0.8606      1.096      1.076         16        512: 100%|██████████| 65/65 [00:08<00:00,  7.92it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.63it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0541      0.424     0.0478     0.0258\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     15/150     0.847G     0.8449      1.084      1.075         13        512: 100%|██████████| 65/65 [00:08<00:00,  7.33it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.122      0.192     0.0794     0.0523\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     16/150     0.835G     0.8008      1.017      1.066         20        512: 100%|██████████| 65/65 [00:08<00:00,  7.85it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.68it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0979      0.218     0.0702     0.0447\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     17/150     0.843G     0.8074      1.027      1.065         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.88it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.15it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.064        0.5     0.0609     0.0404\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     18/150     0.847G     0.7955     0.9933      1.057          7        512: 100%|██████████| 65/65 [00:08<00:00,  7.41it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.94it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.118      0.218     0.0846     0.0532\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     19/150     0.847G     0.8107     0.9917      1.059         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.62it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0924      0.346     0.0687     0.0437\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     20/150     0.837G     0.7875     0.9558      1.059         22        512: 100%|██████████| 65/65 [00:08<00:00,  7.91it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0942      0.308     0.0658     0.0435\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     21/150     0.847G     0.7761     0.9743      1.058         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.43it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0943      0.333     0.0678     0.0458\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     22/150     0.843G     0.7581     0.9048      1.045         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.75it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.91it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.115      0.179     0.0722     0.0446\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     23/150     0.847G     0.7185     0.8541      1.027         23        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0845      0.346     0.0669     0.0467\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     24/150     0.839G     0.7354     0.8958      1.027         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.39it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0713      0.485     0.0717     0.0447\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     25/150     0.847G     0.7047     0.8273      1.019         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.70it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.126      0.111     0.0636     0.0399\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     26/150     0.843G     0.7321     0.8801      1.026         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.91it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.82it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0863      0.308      0.089     0.0617\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     27/150     0.847G     0.7085     0.8532      1.013         20        512: 100%|██████████| 65/65 [00:08<00:00,  7.36it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.36it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.113      0.346     0.0778     0.0535\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     28/150     0.839G     0.6909     0.8193      1.012         16        512: 100%|██████████| 65/65 [00:08<00:00,  7.72it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.42it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0897      0.244     0.0764     0.0534\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     29/150     0.847G     0.6954     0.8133      1.017         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.89it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78        0.1      0.179     0.0714     0.0497\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     30/150     0.843G     0.6821     0.7925      1.006         18        512: 100%|██████████| 65/65 [00:08<00:00,  7.39it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.71it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.122      0.336     0.0861     0.0605\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     31/150     0.847G     0.6649     0.7814      1.004         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.69it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.12it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78        0.1      0.359     0.0906     0.0624\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     32/150     0.839G      0.627      0.768     0.9882         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.17it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.118      0.167     0.0728     0.0456\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     33/150     0.847G     0.6419     0.7642     0.9915         24        512: 100%|██████████| 65/65 [00:08<00:00,  7.33it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.22it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.108      0.295     0.0786      0.056\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     34/150     0.843G     0.6565     0.7711     0.9888         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.68it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.32it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.123      0.218      0.082     0.0581\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     35/150     0.847G     0.6345     0.7353     0.9856         22        512: 100%|██████████| 65/65 [00:08<00:00,  7.84it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0822      0.346     0.0791     0.0536\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     36/150     0.837G     0.6452     0.7394     0.9938         22        512: 100%|██████████| 65/65 [00:08<00:00,  7.31it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.46it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0951      0.269     0.0905     0.0634\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     37/150     0.847G     0.6423     0.7561     0.9873         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.66it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.98it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0757      0.551      0.074     0.0516\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     38/150     0.847G     0.6475     0.7628     0.9965         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.81it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.47it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.104      0.269      0.104     0.0699\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     39/150     0.847G     0.5988     0.6823     0.9748         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.37it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 12.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.136      0.231     0.0994     0.0723\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     40/150     0.837G     0.6175     0.7556     0.9876         17        512: 100%|██████████| 65/65 [00:08<00:00,  7.72it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.95it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.141      0.192      0.101     0.0719\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     41/150     0.847G     0.6239     0.7267     0.9796         14        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.56it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.119      0.205     0.0986     0.0763\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     42/150     0.847G     0.5879     0.6884     0.9699         16        512: 100%|██████████| 65/65 [00:08<00:00,  7.46it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.10it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.123      0.167     0.0789     0.0545\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     43/150     0.847G     0.5885     0.6877     0.9822          8        512: 100%|██████████| 65/65 [00:08<00:00,  7.59it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.57it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.132      0.192     0.0898      0.061\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     44/150     0.839G     0.6095     0.7066     0.9813          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.82it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.61it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.138      0.205      0.107     0.0817\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     45/150     0.847G     0.5987     0.7231     0.9811          9        512: 100%|██████████| 65/65 [00:08<00:00,  7.45it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.48it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.127      0.205      0.109     0.0764\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     46/150     0.847G     0.5636     0.6553     0.9641         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.84it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.73it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.118      0.361     0.0997     0.0702\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     47/150     0.847G     0.5557     0.6407     0.9603         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.31it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.112      0.269     0.0964     0.0678\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     48/150     0.839G     0.5647     0.6434     0.9603         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.43it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.34it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0931       0.41     0.0974     0.0641\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     49/150     0.847G      0.584     0.6451      0.956         12        512: 100%|██████████| 65/65 [00:08<00:00,  7.82it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.29it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.149      0.192      0.107     0.0788\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     50/150     0.847G      0.589     0.6931     0.9766         10        512: 100%|██████████| 65/65 [00:08<00:00,  7.87it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.94it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.111      0.462      0.107     0.0765\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     51/150     0.847G     0.5602     0.6556     0.9562         15        512: 100%|██████████| 65/65 [00:08<00:00,  7.26it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.38it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0913      0.359     0.0838     0.0617\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     52/150     0.837G     0.5635     0.6642     0.9561         11        512: 100%|██████████| 65/65 [00:08<00:00,  7.93it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.55it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78     0.0899      0.423     0.0942     0.0694\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     53/150     0.847G     0.5477     0.6329     0.9576          6        512: 100%|██████████| 65/65 [00:08<00:00,  7.91it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 13.84it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.107      0.462     0.0976     0.0716\n",
      "\n",
      "      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "     54/150     0.847G     0.5188     0.5884     0.9431         13        512: 100%|██████████| 65/65 [00:09<00:00,  7.20it/s]\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:01<00:00, 14.24it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.133      0.282      0.102     0.0705\n",
      "\u001b[34m\u001b[1mEarlyStopping: \u001b[0mTraining stopped early as no improvement observed in last 10 epochs. Best results observed at epoch 44, best model saved as best.pt.\n",
      "To update EarlyStopping(patience=10) pass a new patience value, i.e. `patience=300` or use `patience=0` to disable EarlyStopping.\n",
      "\n",
      "54 epochs completed in 0.163 hours.\n",
      "Optimizer stripped from proyect_experiment1/train2222/weights/last.pt, 6.2MB\n",
      "Optimizer stripped from proyect_experiment1/train2222/weights/best.pt, 6.2MB\n",
      "\n",
      "Validating proyect_experiment1/train2222/weights/best.pt...\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 17/17 [00:02<00:00,  6.99it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        259         78      0.117      0.372      0.107     0.0818\n",
      "Speed: 0.1ms preprocess, 1.9ms inference, 0.0ms loss, 1.5ms postprocess per image\n",
      "Results saved to \u001b[1mproyect_experiment1/train2222\u001b[0m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "wandb:                                                                                \n",
      "wandb: \n",
      "wandb: Run history:\n",
      "wandb:                  lr/pg0 ▁▅██████▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▅▅▅▅▅▅▅▅▅▅▄\n",
      "wandb:                  lr/pg1 ▁▅██████▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▅▅▅▅▅▅▅▅▅▅▄\n",
      "wandb:                  lr/pg2 ▁▅██████▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▅▅▅▅▅▅▅▅▅▅▄\n",
      "wandb:        metrics/mAP50(B) ▁▁▁▃▂▃▄▃▆▃▁▅▃▅▃▄▄▄▃▆▄▄▅▄▅▅▆▄▇▇▇▆██▇▇█▅▆█\n",
      "wandb:     metrics/mAP50-95(B) ▁▂▂▂▃▃▄▄▅▃▂▅▄▅▄▄▄▄▄▆▅▅▆▄▅▆▆▅▇▇▇▆█▇▇▆█▆▇█\n",
      "wandb:    metrics/precision(B) ▂▁▁▃▃▂▆▄▅▃▁▆▂▆▄▄▅▂▆▃▄▄▆▆▅▆▄▃▇▇▆▇▇▆▅▄█▄▄▆\n",
      "wandb:       metrics/recall(B) ▁▄▃▃▃▆▂▃▆��▆▃▇▃▄▅▃▇▂▄▃▃▅▂▄▃▄█▃▃▃▃▃▃▄▆▃▅▆▅\n",
      "wandb:            model/GFLOPs ▁\n",
      "wandb:        model/parameters ▁\n",
      "wandb: model/speed_PyTorch(ms) ▁\n",
      "wandb:          train/box_loss █▅▅▅▄▄▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▁▁▁▁▁▁▁\n",
      "wandb:          train/cls_loss █▆▅▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁\n",
      "wandb:          train/dfl_loss █▅▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁\n",
      "wandb:            val/box_loss █▅▄▄▄▄▃▄▃▃▅▃▂▄▃▃▃▂▃▂▂▂▂▂▁▂▂▂▁▂▂▂▁▂▁▂▁▁▂▁\n",
      "wandb:            val/cls_loss ▆▇█▃▄▂▂▄▂▂▂▂▃▂▂▂▁▁▁▂▂▂▂▂▁▁▂▁▂▁▁▂▁▃▂▂▁▂▂▂\n",
      "wandb:            val/dfl_loss █▆▄▅▅▄▃▅▂▃▅▃▂▃▃▃▄▃▃▂▂▃▂▃▁▂▁▁▁▂▂▂▂▂▁▂▁▂▂▁\n",
      "wandb: \n",
      "wandb: Run summary:\n",
      "wandb:                  lr/pg0 0.00046\n",
      "wandb:                  lr/pg1 0.00046\n",
      "wandb:                  lr/pg2 0.00046\n",
      "wandb:        metrics/mAP50(B) 0.10679\n",
      "wandb:     metrics/mAP50-95(B) 0.0818\n",
      "wandb:    metrics/precision(B) 0.11686\n",
      "wandb:       metrics/recall(B) 0.37179\n",
      "wandb:            model/GFLOPs 8.194\n",
      "wandb:        model/parameters 3011043\n",
      "wandb: model/speed_PyTorch(ms) 2.957\n",
      "wandb:          train/box_loss 0.51884\n",
      "wandb:          train/cls_loss 0.5884\n",
      "wandb:          train/dfl_loss 0.94308\n",
      "wandb:            val/box_loss 1.0875\n",
      "wandb:            val/cls_loss 5.35314\n",
      "wandb:            val/dfl_loss 1.26826\n",
      "wandb: \n",
      "wandb: You can sync this run to the cloud by running:\n",
      "wandb: wandb sync /kaggle/working/wandb/offline-run-20240708_081406-1cdi5vus\n",
      "wandb: Find logs at: ./wandb/offline-run-20240708_081406-1cdi5vus/logs\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Archivo .yaml creado con éxito.\n",
      "Ultralytics YOLOv8.2.50 🚀 Python-3.10.13 torch-2.1.2 CUDA:0 (Tesla T4, 15095MiB)\n",
      "                                                      CUDA:1 (Tesla T4, 15095MiB)\n",
      "Model summary (fused): 168 layers, 3005843 parameters, 0 gradients, 8.1 GFLOPs\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/test_folder/test_images.cache... 0 images, 229 backgrounds, 0 corrupt: 100%|██████████| 229/229 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING ⚠️ No labels found in /kaggle/working/test_folder/test_images.cache, training may not work correctly. See https://docs.ultralytics.com/datasets for dataset formatting guidance.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB RAM): 100%|██████████| 229/229 [00:00<00:00, 978.03it/s]\n",
      "/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
      "  self.pid = os.fork()\n",
      "                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 15/15 [00:02<00:00,  6.27it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   all        229          0          0          0          0          0\n",
      "WARNING ⚠️ no labels found in detect set, can not compute metrics without labels\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Speed: 0.2ms preprocess, 2.7ms inference, 0.0ms loss, 3.6ms postprocess per image\n",
      "Saving /kaggle/working/validation_results/experimentexperiment_4/predictions.json...\n",
      "Results saved to \u001b[1m/kaggle/working/validation_results/experimentexperiment_4\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "    \n",
    "all_experiment_metrics = []\n",
    "\n",
    "\n",
    "for experiment in range(n_experiments):\n",
    "    \n",
    "    print(f\"Experimento {experiment + 1}\")\n",
    "    \n",
    "    # Dividir los datos en train y validation\n",
    "    train_data, val_data = train_test_split(data, test_size=0.2, random_state=42)\n",
    "    \n",
    "    # Crear directorio para el experimento \n",
    "    experiment_dir=os.path.join('/kaggle/working',f'experiment_{experiment+1}')\n",
    "    os.makedirs(experiment_dir,exist_ok=True)\n",
    "    \n",
    "    # Crear directorios para train y validation\n",
    "    train_dir = os.path.join(experiment_dir, f'train_data_{experiment + 1}')\n",
    "    val_dir = os.path.join(experiment_dir, f'val_data_{experiment + 1}')\n",
    "    os.makedirs(train_dir, exist_ok=True)\n",
    "    os.makedirs(val_dir, exist_ok=True)\n",
    "    \n",
    "    # Crear directorios para imágenes y etiquetas dentro de train y validation\n",
    "    train_images_dir = os.path.join(train_dir, 'images')\n",
    "    train_labels_dir = os.path.join(train_dir, 'labels')\n",
    "    val_images_dir = os.path.join(val_dir, 'images')\n",
    "    val_labels_dir = os.path.join(val_dir, 'labels')\n",
    "    os.makedirs(train_images_dir, exist_ok=True)\n",
    "    os.makedirs(train_labels_dir, exist_ok=True)\n",
    "    os.makedirs(val_images_dir, exist_ok=True)\n",
    "    os.makedirs(val_labels_dir, exist_ok=True)\n",
    "    print(f'Copiando a las carpetas de entrenamiento')\n",
    "    # Copiar las imágenes y etiquetas a los directorios correspondientes\n",
    "    for index in train_data.index:\n",
    "        shutil.copy(os.path.join(path_images, train_data.loc[index, 'image']), os.path.join(train_images_dir, train_data.loc[index, 'image']))\n",
    "        shutil.copy(os.path.join(path_labels, train_data.loc[index, 'label']), os.path.join(train_labels_dir, train_data.loc[index, 'label']))\n",
    "    for index in val_data.index:\n",
    "        shutil.copy(os.path.join(path_images, val_data.loc[index, 'image']), os.path.join(val_images_dir, val_data.loc[index, 'image']))\n",
    "        shutil.copy(os.path.join(path_labels, val_data.loc[index, 'label']), os.path.join(val_labels_dir, val_data.loc[index, 'label']))\n",
    "    print(\"Copiado\")\n",
    "    # Crear el archivo YAML\n",
    "    yaml_path = os.path.join('/kaggle/working', f'data_{experiment + 1}.yaml')\n",
    "    yaml_content = f\"\"\"\n",
    "                    names:\n",
    "                        0: crosswalk\n",
    "                    train: {train_dir}/images\n",
    "                    val: {val_dir}/images\n",
    "                    \"\"\"\n",
    "    # Guardar el archivo\n",
    "    with open(yaml_path, 'w') as file:\n",
    "        file.write(yaml_content)\n",
    "    print(\"Archivo .yaml creado con éxito.\")\n",
    "    \n",
    "    experiment_result_path=f'/kaggle/working/experiment_{experiment+1}/training_results'\n",
    "    \n",
    "    os.makedirs(experiment_result_path, exist_ok=True)\n",
    "    \n",
    "    model.train(data=yaml_path,\n",
    "                    epochs=max_epochs, # Número máximo de epochs para el entrenamiento\n",
    "                    imgsz=512,\n",
    "                    cache=True,\n",
    "                    patience=patience,\n",
    "                \n",
    "                    #batch=32,\n",
    "                    save_period=25,\n",
    "                    seed=123,\n",
    "                    #time=2,\n",
    "                    #save=True,\n",
    "                    plots=True,\n",
    "                    project=f'proyect_experiment{1}',\n",
    "                    device=[0, 1],\n",
    "                    ## Esto especifica el uso de las GPUs 0 y 1\n",
    "                        )  # Ajustar epochs e imgsz según tus necesidades\n",
    "    evaluate_model(model,f'experiment_{experiment}')\n",
    "    \n",
    "    # Export the model\n",
    "    #model.export(format=\"onnx\")\n",
    "    model.save(f'{save_weights_dir}/experiment{experiment}')\n",
    "        \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fcad3c46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T08:24:45.464097Z",
     "iopub.status.busy": "2024-07-08T08:24:45.463483Z",
     "iopub.status.idle": "2024-07-08T08:25:25.520120Z",
     "shell.execute_reply": "2024-07-08T08:25:25.518976Z"
    },
    "papermill": {
     "duration": 41.326893,
     "end_time": "2024-07-08T08:25:26.144579",
     "exception": false,
     "start_time": "2024-07-08T08:24:44.817686",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Compresión completada. Archivo ZIP creado en: /kaggle/working/save.zip\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import zipfile\n",
    "\n",
    "def comprimir_carpeta(carpeta_origen, archivo_destino):\n",
    "    try:\n",
    "        # Asegurarse de que la carpeta de origen existe\n",
    "        if not os.path.exists(carpeta_origen):\n",
    "            raise FileNotFoundError(f\"La carpeta de origen '{carpeta_origen}' no existe.\")\n",
    "\n",
    "        # Crear el archivo ZIP\n",
    "        with zipfile.ZipFile(archivo_destino, 'w', zipfile.ZIP_DEFLATED) as zipf:\n",
    "            # Recorrer el directorio y agregar archivos al ZIP\n",
    "            for raiz, dirs, archivos in os.walk(carpeta_origen):\n",
    "                for archivo in archivos:\n",
    "                    ruta_completa = os.path.join(raiz, archivo)\n",
    "                    ruta_relativa = os.path.relpath(ruta_completa, carpeta_origen)\n",
    "                    zipf.write(ruta_completa, ruta_relativa)\n",
    "\n",
    "        print(f\"Compresión completada. Archivo ZIP creado en: {archivo_destino}\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error durante la compresión: {str(e)}\")\n",
    "\n",
    "# Ejemplo de uso\n",
    "carpeta_origen = \"/kaggle/working/\"\n",
    "archivo_destino = \"/kaggle/working/save.zip\"\n",
    "\n",
    "comprimir_carpeta(carpeta_origen, archivo_destino)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5c8b7a2",
   "metadata": {
    "papermill": {
     "duration": 0.625224,
     "end_time": "2024-07-08T08:25:27.471657",
     "exception": false,
     "start_time": "2024-07-08T08:25:26.846433",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4896cd8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T08:25:28.808509Z",
     "iopub.status.busy": "2024-07-08T08:25:28.807617Z",
     "iopub.status.idle": "2024-07-08T08:25:28.812225Z",
     "shell.execute_reply": "2024-07-08T08:25:28.811323Z"
    },
    "papermill": {
     "duration": 0.714485,
     "end_time": "2024-07-08T08:25:28.814140",
     "exception": false,
     "start_time": "2024-07-08T08:25:28.099655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#! pip uninstall wandb"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a49d43c",
   "metadata": {
    "papermill": {
     "duration": 0.619262,
     "end_time": "2024-07-08T08:25:30.056893",
     "exception": false,
     "start_time": "2024-07-08T08:25:29.437631",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Eliminar todo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "99f544c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T08:25:31.319021Z",
     "iopub.status.busy": "2024-07-08T08:25:31.318044Z",
     "iopub.status.idle": "2024-07-08T08:25:31.322663Z",
     "shell.execute_reply": "2024-07-08T08:25:31.321656Z"
    },
    "papermill": {
     "duration": 0.627488,
     "end_time": "2024-07-08T08:25:31.324802",
     "exception": false,
     "start_time": "2024-07-08T08:25:30.697314",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#!find /kaggle/working/ -mindepth 1 -type f -exec rm {} +\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "d80122b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-08T08:25:32.654490Z",
     "iopub.status.busy": "2024-07-08T08:25:32.654133Z",
     "iopub.status.idle": "2024-07-08T08:25:32.661204Z",
     "shell.execute_reply": "2024-07-08T08:25:32.660212Z"
    },
    "papermill": {
     "duration": 0.64046,
     "end_time": "2024-07-08T08:25:32.663327",
     "exception": false,
     "start_time": "2024-07-08T08:25:32.022867",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import shutil\n",
    "\n",
    "def eliminar_contenido_carpeta(ruta_carpeta):\n",
    "    # Eliminar todos los archivos dentro de la carpeta\n",
    "    for nombre_archivo in os.listdir(ruta_carpeta):\n",
    "        ruta_completa = os.path.join(ruta_carpeta, nombre_archivo)\n",
    "        try:\n",
    "            if os.path.isfile(ruta_completa) or os.path.islink(ruta_completa):\n",
    "                os.unlink(ruta_completa)\n",
    "            elif os.path.isdir(ruta_completa):\n",
    "                shutil.rmtree(ruta_completa)\n",
    "        except Exception as e:\n",
    "            print(f\"No se pudo eliminar {ruta_completa}. Error: {str(e)}\")\n",
    "\n",
    "# Ejemplo de uso\n",
    "#ruta_carpeta = '/kaggle/working/'\n",
    "#eliminar_contenido_carpeta(ruta_carpeta)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "78e4ba88",
   "metadata": {
    "papermill": {
     "duration": 0.677653,
     "end_time": "2024-07-08T08:25:33.977938",
     "exception": false,
     "start_time": "2024-07-08T08:25:33.300285",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 5306477,
     "sourceId": 8820615,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5306543,
     "sourceId": 8820716,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5306628,
     "sourceId": 8820948,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30733,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2250.909616,
   "end_time": "2024-07-08T08:25:37.445661",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-08T07:48:06.536045",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
